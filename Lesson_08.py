'''1.	Написать функцию, циклически сдвигающую целое число на `N` разрядов вправо или влево, в зависимости от третьего
параметра функции. Функция должна принимать три параметра: в первом параметре передаётся число для сдвига, второй
параметр задаёт количество разрядов для сдвига (по умолчанию сдвиг на 1 разряд), 3-й булевский параметр задаёт
направление сдвига (по умолчанию влево (False)).'''

def sdvig(number, count, lf=False):
    number = str(number)
    if lf == False:
        return (number[count:] + number[:count])
    else:
        return (number[-count:] + number[:-count])

print(sdvig(12345, 2))

'''2.	Написать функцию для перевода десятичного числа в другую систему исчисления (2-36) Функция принимает два аргумента:
первый аргумент - число которое надо перевести в другую систему счисления и второй аргумент - это номер системы
счисления от 2 до 36.
###Алгоритм следующий: 
a. вводим число `N` и основание системы счисления `p`
b. получаем остаток от целочисленного деления числа `N` на `p`, Запоминаем этот остаток
c. уменьшаем `N` в `p` раз
d. повторяем шаги `b` и `c` пока `N > 0` 
e. полученные остатки выводим на экран в обратном порядке, при этом, если остаток больше или равен 10, то он заменяется
соответствующей буквой.'''

# Небольшая подсказка. В этой задаче вам понадобится, список, метод revers() (или срез [::-1]), чтоб развернуть список,
# метод join() и строка ascii_uppercase из модуля string (её можно получить если сделать импорт from string import
# ascii_uppercase), она содержит все буквы латинского алфавита.

def perevod(N, p):
    from string import ascii_uppercase
    symbols = '0123456789' + ascii_uppercase
    lst = ''
    while N > 0:
        lst = (symbols[N % p]) + lst
        N = N // p
    return lst

print(perevod(136, 2))
print(perevod(123456, 16))