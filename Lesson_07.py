# Set
''' 1. Даны два списка чисел. Показать,
    - числа содержащиеся одновременно как в первом списке, так и во втором
    - числа содержащиеся в первом, но отсутствуют во втором
    - только уникальные числа для первого и второго списков. '''

A = input('Введите числа: ')
B = input('Введите числа: ')
a = set(A)
b = set(B)
c = a.intersection(b)
d = a.difference(b)
e = a.union(b)
print('Числа в первом списке', A,'\n''Числа во втором списке', B,'\n' 'Числа содержащиеся в обоих списках', c, \
      '\n''Числа содержащиеся в первом, но отсутствуют во втором', d, '\n''Только уникальные числа для первого и второго списков', e)

# Dict

'''2. В единственной строке записан текст. Для каждого слова из данного текста подсчитайте, сколько раз оно встречалось в 
этом тексте ранее.
Словом считается последовательность непробельных символов идущих подряд, слова разделены одним или большим числом 
пробелов или символами конца строки.'''

d = {}
lst = input('Введите текст: ')
for i in lst.split():
    if i in d:
        d[i] += 1
    else:
        d[i] = 1
print(d)

'''3. Дан текст. Выведите слово, которое в этом тексте встречается чаще всего. Если таких слов несколько, выведите все, 
которые подходят по условию задачи.
Задачу необходимо решить с использованием словаря.'''

d = {}
lst = input('Введите текст: ')
for i in lst.split():
    if i in d:
        d[i] += 1
    else:
        d[i] = 1
print(d)
a = max(d.values())
b = [k for k, j in d.items() if j == a]
print(d, b)

'''4. Дан словарь ключами которого являются английские слова, а занчениями - списки латинских слов. Необходимо развернуть 
словарь. Другими словани, необходимо, на основании заданного словаря, создать новый словарь, у которого в качестве 
ключей будут взяты латинские слова, из первого словаря, а значениями будут, соответствующие им, английские слова.

    apple - malum, pomum, popula
    fruit - baca, bacca, popum
    punishment - malum, multa'''

d = {
    'apple': ('malum', 'pomum', 'popula'),
    'fruit': ('baca', 'bacca', 'popum'),
    'punishment': ('malum', 'multa')
}
revers = {values: keys for keys, values in d.items()}
print(d, revers, sep='\n')